Current To-Do's: 

for clases:
js camelcase 
css hypen

    // let <variable> = (test case) ? <value if test is true> : <value if test is false>

      //script --> create variable named correctAnswer = ${STORE.questions[questionCount].correctAnswer}

      //refactoring major part of continous integration 

Trello

(*) score "" out of undefined
(*) feedback for final question needs to display
(*) Question Number && Current Score either on new line or in left and right corners
(*) style endQuiz the same as quizInstructions

------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
(*) help on getting lines 22-34 to work within code (--> transitionNewQuestion?)
(whether they are correct or not, the correct answer should be highlighted)
ref: https://stackoverflow.com/questions/56450731/how-can-i-highlight-correct-and-incorrect-answers-to-an-online-quiz

(*) plain english to describe what for loop is doing on line scrip.js 14

(*) styling isssues
- display feedback at bottom of container
- place container in the middle of the browser
- space between Retake quiz and final feedback

(*) upload to GitHub (public key issue)
using git locally to save

*extra* display explanation/logic behind answer before transitioning to next question
 --> (addRationale() on line 76?)


------------------------------------------------------------------------------------
------------------------------------------------------------------------------------
Completed:
(x) display quizInstructions page upon retaking quiz
(x) show entry page --> startButton hide quiz instructions + clear instructions
(x) need to clear quizResults + feedback upon restart of quiz
(x) hide 'Let's go' Button During quiz
(x) Build in feedback after each guess
(x) show current score
(x) Results page button not looping back through quiz questions
------------------------------------------------------------------------------------
(x) doesn't display next question or increase question count if answer is incorrect
(x) not clearing last question and displaying results page to retake quiz
(x) still need 'Let's go' button on results quiz page to allow user to retake quiz

Notes from Q&A: 
//'hookup function (line 89) executing function (line 90)
//get rid of and replace --> .html
//"creating hooks are the new way to do things.."
//react is a virtual DOM that updates asynchronously optimizing performance cost or only upon change --> high scalability
//HTML write up --> event delegation --> jQuery methods for manipulation (repeat)
//make sure to put in initialization function; use console.logs
//re: console.log() is it updating the variable? --> operate next function

Other:

Highlighting responses:

1.
// function highlightCorrectAnswer() {
//   for (let i = 0; i < STORE.question[questionCount].answers[i].length; i++) {
//     if (STORE.questions[questionCount].answers[i] === STORE.correctAnswer)
//       $(ol).nth - child(i).css("ssssss");
//   }

//   STORE.question[x];

//add border around text of correct answer after response is submitted

2. 
//find which is correct --> find nth child of that (in order from the beginning of the container)
// $('').${STORE.questions[questionCount].answers[i]}.highlight();
// if answer is correct
// let correctResponse = radioValue[i];
// if (correctResponse === STORE.questions[questionCount].correctAnswer) {
//   $("").css({ backgroundColor: "green" });
// } else {
//   $("").css({ backgroundColor: "red" });
// }
// $(foo)
// foo = 'li:nth-child(3)'
// $( 'li:nth-child(3)').
// }

3.

// ternary (if answer matches correctAnswer --> 'correct' else 'incorrect)
// const classToApply =
//   correctAnswer == STORE.questions[questionCount].correctAnswer
//     ? "correct"
//     : "incorrect";

// console.log(classToApply);

//manipulating parent of radioValue + setTimeout between questions
// radioValue.parentElement.classList.add(classToApply);
// setTimeout(() => {
//   radioValue.parentElement.classList.remove(classToApply);
//   displayCurrentQuestion();
// }, 1000);
//Resource:
//https://www.youtube.com/watch?v=u98ROZjBWy8&list=PLDlWc9AfQBfZIkdVaOQXi1tizJeNJipEx


<!--
  Wireframe +
        header: title of app + question number and current score
         main container: where content will be placed
            ex: questions, images, submit, select, arrow buttons
            <form>
                <fieldset>

                </fieldset>
            </form>
-->

<!--
  1. render choices in a <form>
  2. utilize semantic HTML, CSS, and jQuery
  3. follow a11y practices
  4. use responsive design
  5. enable fully use of keyboard to navigate application
-->

<!--
Resources:
  Create wireframe (2 dimensional drawing of a page's interface)...aka define and plan the information heirarchy on each page or screen...a simple 'black and white' diagram...an essential intermediary step...
  https://careerfoundry.com/en/blog/ux-design/how-to-create-your-first-wireframe/

  define usablity conventions 

  (work top-down, left-right)
  1. clarity
    what each page is depicting and what the user can do there
  2. user confidence
    building trust in your brand through user design
    ex: ease of navigation and clear call to action
    use familiar naviagtional processes and place buttons in commonly used intuitive positions
  3. simplicity
    avoid information overload

wireframes are about intuitive and logical layout with good information heirarchy

consider conducting userbility tests before going digital (wireframe tools) ex: https://balsamiq.com/

Q&A:

Think of a wireframe as a skeleton. A mockup would be the muscles and skin and such.

It's just a basic idea of where stuff goes.

multiple for loop and nested if statements
-->
